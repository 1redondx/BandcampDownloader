<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf">

    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#2a2a2a" />
    <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="#f0f0f0" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#f0f0f0" />

    <!--#region Button-->

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#3f3f3f" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#515151" />
                            <Setter Property="Foreground" Value="#f0f0f0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#616161" />
                            <Setter Property="Foreground" Value="#f0f0f0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#2c2c2c" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#0078d7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Hyperlink-->

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="DeepSkyBlue" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="DarkOrange" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region ListBox-->

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#333333" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="ListBoxItemBorder"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ListBoxItemBorder" Property="Background" Value="#0078d7" />
                            <Setter TargetName="ListBoxItemBorder" Property="BorderBrush" Value="#008eff" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ListBoxItemBorder" Property="Background" Value="#005aa1" />
                            <Setter TargetName="ListBoxItemBorder" Property="BorderBrush" Value="#0078d7" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ListBoxItemBorder" Property="Background" Value="#595959" />
                            <Setter TargetName="ListBoxItemBorder" Property="BorderBrush" Value="Gray" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region CheckBox-->

    <Geometry x:Key="CheckBoxCheckmark">M7.2,5 L5.5,7.16 4.16,6.3 3.5,6.7 5.5,8.4 8.6,5.25 C8.6,5.25 8,4.7 7.22,5</Geometry>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="1"
                        SnapsToDevicePixels="true"
                        Stroke="#f0f0f0"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="#f0f0f0"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="#2a2a2a" />
        <Setter Property="BorderBrush" Value="#f0f0f0" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="CheckBoxBorder"
                                Width="14"
                                Height="14"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                                <Path
                                    x:Name="CheckMark"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="1,1.007,1,1"
                                    Data="{StaticResource CheckBoxCheckmark}"
                                    Fill="#f0f0f0"
                                    Stretch="Fill" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="#515151" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#0078d7" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region RadioButton-->

    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#2a2a2a" />
        <Setter Property="BorderBrush" Value="#f0f0f0" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="RadioButtonBorder"
                                Width="12"
                                Height="12"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                                <Border
                                    x:Name="RadioMark"
                                    Width="6"
                                    Height="6"
                                    Background="#f0f0f0"
                                    BorderBrush="#f0f0f0"
                                    CornerRadius="6" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}" />
                            <Setter Property="Padding" Value="6,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                            <Setter TargetName="RadioButtonBorder" Property="Background" Value="#515151" />
                            <Setter TargetName="RadioButtonBorder" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RadioButtonBorder" Property="BorderBrush" Value="#0078d7" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ComboBox-->
    <!--  https://www.eidias.com/Blog/2012/2/20/customizing-wpf-combo-box-style  -->

    <Geometry x:Key="ComboBoxArrow">M-0,6 L-0,8 8,8 8,-0 6,-0 6,6 z</Geometry>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2,2,21,2"
                        SnapsToDevicePixels="true"
                        Stroke="#f0f0f0"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="ToggleButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="#707070"
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="PopUpButton"
                            Width="15"
                            Margin="1"
                            HorizontalAlignment="Right"
                            Background="#3f3f3f">
                            <Path
                                x:Name="Arrow"
                                Width="5.5"
                                Height="5.5"
                                Margin="0,4,0,7"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ComboBoxArrow}"
                                Fill="#f0f0f0"
                                RenderTransformOrigin="0.5,0.5"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="45" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PopUpButton" Property="Background" Value="#515151" />
                            <Setter TargetName="ToggleButtonBorder" Property="Background" Value="#515151" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                            <Setter TargetName="PopUpButton" Property="Background" Value="#2c2c2c" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,0,3,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="ComboBoxItemBorder"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="#595959" />
                            <Setter TargetName="ComboBoxItemBorder" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="#005aa1" />
                            <Setter TargetName="ComboBoxItemBorder" Property="BorderBrush" Value="#0078d7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="Background" Value="#3f3f3f" />
        <Setter Property="Padding" Value="5,3,5,1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" MinWidth="18" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border
                                x:Name="Shadow"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Background="Transparent">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                                </Border.Effect>
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#2c2c2c"
                                    BorderBrush="#707070"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                    Fill="{Binding Background, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shadow" Property="Background" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="Background" Value="#2c2c2c" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type lex:EnumComboBox}" />

    <!--#endregion-->

    <!--#region TextBox-->

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#333333" />
        <Setter Property="BorderBrush" Value="#707070" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="#2c2c2c" />
                            <Setter TargetName="Border" Property="Background" Value="#2c2c2c" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#0078d7" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="true" />
                                <Condition Property="IsEnabled" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#0078d7" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ToolTip-->

    <Style TargetType="ToolTip">
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border
                        Name="Border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="#3f3f3f"
                        BorderBrush="#707070"
                        BorderThickness="1">
                        <ContentPresenter
                            Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ProgressBar-->

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="#515151" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border
                            x:Name="PART_Track"
                            BorderBrush="#707070"
                            BorderThickness="1" />
                        <Border
                            x:Name="PART_Indicator"
                            HorizontalAlignment="Left"
                            Background="{TemplateBinding Foreground}">
                            <Grid x:Name="Animation" ClipToBounds="True">
                                <Border
                                    Name="PART_GlowRect"
                                    Width="195"
                                    Margin="-195,0,0,0"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="PART_Indicator"
                                            Storyboard.TargetProperty="Background"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Markdig.WPF-->

    <Style x:Key="{x:Static markdig:Styles.Heading1StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="42" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="{x:Static markdig:Styles.Heading2StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="{x:Static markdig:Styles.Heading3StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="{x:Static markdig:Styles.Heading4StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="#f0f0f0" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style x:Key="{x:Static markdig:Styles.CodeBlockStyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="Background" Value="#515151" />
        <Setter Property="FontFamily" Value="Consolas, Lucida Sans Typewriter, Courier New" />
    </Style>

    <Style x:Key="{x:Static markdig:Styles.CodeStyleKey}" TargetType="{x:Type Run}">
        <Setter Property="Background" Value="#515151" />
        <Setter Property="FontFamily" Value="Consolas, Lucida Sans Typewriter, Courier New" />
    </Style>

    <Style x:Key="{x:Static markdig:Styles.HyperlinkStyleKey}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="DeepSkyBlue" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="DarkOrange" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
</ResourceDictionary>